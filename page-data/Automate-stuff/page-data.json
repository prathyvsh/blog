{"componentChunkName":"component---src-templates-blog-post-js","path":"/Automate-stuff/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"dayDreams ++","author":"Athul Cyriac Ajay"}},"markdownRemark":{"id":"f26b9774-1ee1-5203-9298-7829de167384","excerpt":"Ever encountered a time when you have a few working branches which you update daily? Then you’ll know how tiresome it is to  to every branch and typing  . If…","html":"<p>Ever encountered a time when you have a few working branches which you update daily? Then you’ll know how tiresome it is to <code class=\"language-text\">checkout</code> to every branch and typing <code class=\"language-text\">git push &lt;branch name&gt;</code> . If you haven’t encountered this,try doing it once, you’ll know what I’m saying😏😏.<br>\nWe could always automate these stuff just by a few line of shell code.It’s quite <strong>easy</strong> you know. Starting by taking the above said situation,you’ve got 5 branches and you want to push to all these 5 branches. We’ll write a shell script for it.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ~/path/to/git/repository/ <span class=\"token comment\">#Assuming you are anywhere</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'master'</span> <span class=\"token string\">'dev'</span> <span class=\"token string\">'fix1'</span> <span class=\"token string\">'patch1'</span> <span class=\"token string\">'dope-branch-name'</span>\n<span class=\"token keyword\">do</span>\n\t<span class=\"token function\">git</span> checkout <span class=\"token variable\">$i</span>\n\t<span class=\"token function\">git</span> pull origin <span class=\"token variable\">$i</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> push origin <span class=\"token variable\">$i</span>\n<span class=\"token keyword\">done</span></code></pre></div>\n<p>This 7 line script can help you save some keystrokes.You should save this script with a <code class=\"language-text\">.sh</code> extension and can be  run by typing <code class=\"language-text\">sh script_filename.sh</code> So now,what does this mean? It’s the same thing you type in the terminal with a for loop as for extra a <em>“dev”</em> touch😁😁.<br>\nThe looping variable <code class=\"language-text\">i</code> will loop through the strings we’ve passed through, these will be our branch names and inside the for loop the variable is passed by a <em>$</em> prefix. Now wherever we use the <em>$</em> as prefix for the variable name,the script will automatically pass the variable’s value, just like that :snap:⚡⚡.  Everything that needs to be executed inside the loop should be between the <code class=\"language-text\">do</code> and <code class=\"language-text\">done</code> keywords. The loop will go on till the parameters are over.</p>\n<hr>\n<p>Now let us make a script which runs a python program,saves its output to another file and commits it and git push it.\nHere I’ll be pushing it to a <a href=\"https://gist.github.com\">Gist</a>.<br>\nSo some days ago I started using (Wakatime)[] which gets track on your coding activity and its super cool,showing it off in your GitHub profile seemed cool and one <a href=\"phamous.dev\">Campus Expert,John Pham</a> did do it and it looked super cool. But the way he did was using GitHub Actions, and no I didn’t apply for the Beta of GH Actions. So I made a Python🐍 script to make something like his. You can find it <a href=\"https://github.com/Athul-CA/wakatime-metrics\">here</a>.<br>\nIt’s a tad manual since API requests are 😰😱. The manual thing is you’ve got to copy a json file from your wakatime dasboard’s “embed” page. The rest of the work is done by a shell script👻👻. For showing the activity in my Profile too,I made a public gist with a <code class=\"language-text\">.txt</code> file in GitHub and cloned it to my local machine. The shell script goes like this,👇👇</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ~/path/to_the/python_file and json <span class=\"token function\">file</span>\nnvim filename.json\npython main.py filename.json <span class=\"token operator\">></span> ~/path_to_cloned_gist_repo/filename.txt\n<span class=\"token builtin class-name\">cd</span> ~/path_to_gist_repo\n<span class=\"token function\">git</span> commit -a -m <span class=\"token string\">\"New Metrics\"</span>\n<span class=\"token function\">git</span> push origin master</code></pre></div>\n<p>When running this script, you’ll be first prompted to paste the <code class=\"language-text\">json</code> text you copied from the Wakatime dashboard. You should delete the current contents and paste the new ones and save it. You can use any editor of your choice, I use NeoVim. It will run the python program and it will push the changes to GitHub. Easy Right? Just with a few line of Bash Script we can automate quite a good amount of Tedious Tasks.<br>\nWe can set up a script for launching the terminal just as the System turns on but I believe its for you to find out more about it. This post might’ve helped and possibly this will be the needed push for you to explore the world of shell scripting and automation✌️✌️✌️.<br>\nI will post some more on this when I understand more of this some day.👻</p>","frontmatter":{"title":"Shell Scripting to Automation","date":"July 02, 2019","description":"Automating Basic Unix stuff with Shell Scripts/Bash Scripts. From Pushing to different branches to saving you a Few Keypresses"}}},"pageContext":{"slug":"/Automate-stuff/","previous":{"fields":{"slug":"/mob-dev/"},"frontmatter":{"title":"Programming on your Phone"}},"next":{"fields":{"slug":"/probot/"},"frontmatter":{"title":"Making GitHub apps with Probot"}}}}}